version: "3.9"

x-api-environment:
  &default-api-environment
  NODE_ENV: ${DK_ENVIRONMENT}
  API_PORT: ${API_PORT}
  API_DEGUG_PORT: ${API_DEGUG_PORT}
  API_JWT_SECRET: ${API_JWT_SECRET}
  API_JWT_EXPIRATION: ${API_JWT_EXPIRATION}
  MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
  MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
  MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}

services:

  api:
    build:
      context: ./projects/api
      args:
        DK_UID: ${DK_UID}
        DK_GID: ${DK_GID}
        DK_ENVIRONMENT: ${DK_ENVIRONMENT}
    container_name: ${DK_PROJECT_NAME}_api
    ports:
      - "${API_PORT}:3000"
      - "${API_DEGUG_PORT}:${API_DEGUG_PORT}"
    environment: *default-api-environment
    volumes:
      - ${PWD}/projects/api:/home/node/project
    depends_on:
      mongodb:
        condition: service_started
    networks:
      - backend
    command: [ "npm", "run", "start:debug" ]

  front:
    build:
      context: ./projects/front
      args:
        DK_UID: ${DK_UID}
        DK_GID: ${DK_GID}
        DK_ENVIRONMENT: ${DK_ENVIRONMENT}
    container_name: ${DK_PROJECT_NAME}_front
    ports:
      - "${FRONTEND_PORT}:3000"
    environment:
      NODE_ENV: ${DK_ENVIRONMENT}
    volumes:
      - ${PWD}/projects/front:/home/node/project
    depends_on:
      api:
        condition: service_started
    networks:
      - backend
    command: [ "npm", "run", "dev" ]

  mongodb:
    build:
      context: ./docker/services/mongodb
      args:
        DK_UID: ${DK_UID}
        DK_GID: ${DK_GID}
    container_name: ${DK_PROJECT_NAME}_mongodb
    ports:
      - "${MONGO_INITDB_PORT}:${MONGO_INITDB_PORT}"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    volumes:
      - ${PWD}/docker/services/mongodb/docker-entrypoint-initdb.d/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro
      - ${PWD}/docker/volumes/mongodb:/data/db

networks:
  backend:
    driver: bridge
